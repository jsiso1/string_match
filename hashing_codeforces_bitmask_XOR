//https://codeforces.com/contest/1914/problem/G2

#include <bits/stdc++.h>
#include <iostream>
#include <string>


using namespace std;
 
void __print(int x) {cerr << x;}
void __print(long x) {cerr << x;}
void __print(long long x) {cerr << x;}
void __print(unsigned x) {cerr << x;}
void __print(unsigned long x) {cerr << x;}
void __print(unsigned long long x) {cerr << x;}
void __print(float x) {cerr << x;}
void __print(double x) {cerr << x;}
void __print(long double x) {cerr << x;}
void __print(char x) {cerr << '\'' << x << '\'';}
void __print(const char *x) {cerr << '\"' << x << '\"';}
void __print(const string &x) {cerr << '\"' << x << '\"';}
void __print(bool x) {cerr << (x ? "true" : "false");}
 
template<typename T, typename V>
void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
template<typename T>
void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
void _print() {cerr << "]\n";}
template <typename T, typename... V>
void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);


//mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
//mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

//uniform_int_distribution<int> uid(1,111);

 
const double pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679;
const string pi_string = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679";

mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

#define ll long long
using ld = long double;
const ll MOD = 998244353;

const int NN = 3e5+5;
const int INF = 1e9+7;

bitset<1000001> prime;

struct Compare {
	bool operator()(array<ll, 3>& a, array<ll, 3>& b) {
		return a[0] > b[0];
	}
};


void solve() {
	int n;
	cin >> n;
	vector<uint64_t> key(n);
	for (int i = 0; i<n; ++i)
		key[i] = rng();

	vector<uint64_t> v(2*n);

	for (int i = 0; i<2*n; ++i) {
		int x; cin >> x;
		x--;
		v[i] = key[x];
	}

	ll ans = 1;
	ll pairs = 0;

	for (int i = 0; i<2*n; ++i) {
		int idx = i;
		while (true) {
			uint64_t curr = v[idx];
			while (curr) {
				idx++;;
				curr ^= v[idx];
			}

			int end = idx;
		
			debug(i, end);
			curr = 0;
			ll count = end - i + 1;
			map<uint64_t, int> mp;
			vector<pair<int, int>> intervals;
			mp[0] = i-1;
			for (int k = i; k<end; ++k) {
				curr ^= v[k];
				if (mp.count(curr))
					intervals.push_back({mp[curr]+1, k});
				mp[curr] = k;
			}
			sort(intervals.begin(), intervals.end());

			int last = i;
			for (auto each: intervals) {
				if (each.first < last) continue;
				count -= (each.second - each.first + 1);
				last = each.second;
			}

		
			ans = (count * ans)%MOD;
			pairs ++;
			i= idx; break;
			
		}

	}

		
		
	cout << pairs << " " << ans << endl;

	


	

}


int main() {
	IOS;
	int TC; cin >> TC;
	while (TC--) {
		solve();
	}
}
 

